#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define U_TAPPING_TERM 200

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESCAPE  &kp N1     &kp N2     &kp N3  &kp N4        &kp N5           &kp N6     &kp N7  &kp N8        &kp N9   &kp N0            &kp MINUS
&kp TAB     &kp Q      &kp W      &kp E   &kp R         &kp T            &kp Y      &kp U   &kp I         &kp O    &kp P             &kp BACKSLASH
&kp LSHIFT  &kp A      &kp S      &kp D   &kp F         &kp G            &kp H      &kp J   &kp K         &kp L    &kp SEMICOLON     &kp APOS
&kp LCTRL   &kp Z      &kp X      &kp C   &kp V         &kp B            &kp N      &kp M   &kp COMMA     &kp DOT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            &kp ENTER  &kp SPACE  &mo 4   &kp LEFT_ALT  &kp BACKSPACE    &kp SLASH  &to 1   &kp LEFT_GUI
            >;
        };

        NAV {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp PLUS  &kp KP_MINUS  &kp ASTERISK  &kp KP_DIVIDE  &kp KP_EQUAL          &trans
&trans  &kp HOME  &kp UP    &kp END    &kp PG_UP  &trans    &kp N7    &kp N8        &kp N9        &trans         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &trans    &kp N4    &kp N5        &kp NUMBER_6  &trans         &kp LEFT_BRACE        &kp RIGHT_BRACE
&trans  &trans    &trans    &trans     &trans     &trans    &kp N1    &kp N2        &kp N3        &kp KP_DOT     &kp LEFT_BRACKET      &kp RIGHT_BRACKET
        &trans    &trans    &trans     &trans     &trans    &to 0     &to 2         &kp N0
            >;
        };

        SYMNUM {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans     &trans           &trans  &trans    &trans      &trans         &trans     &trans         &trans        &trans                &trans                 &trans
&trans     &trans           &trans  &trans    &trans      &trans         &trans     &trans         &trans        &trans                &trans                 &trans
&trans     &trans           &trans  &trans    &trans      &trans         &trans     &trans         &trans        &trans                &trans                 &trans
           &trans           &trans  &trans    &trans      &trans         &to 1      &to 3          &trans
            >;
        };

        FUN {
            bindings = <
&trans  &trans   &trans  &trans   &trans   &trans     &trans           &trans            &trans             &trans           &trans        &trans
&trans  &trans   &kp F1  &kp F2   &kp F3   &kp F4     &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4  &bt BT_CLR
&trans  &kp DEL  &kp F5  &kp F6   &kp F7   &kp F8     &out OUT_TOG     &kp K_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE    &kp LALT
&trans  &trans   &kp F9  &kp F10  &kp F11  &kp F12    &rgb_ug RGB_TOG  &rgb_ug RGB_EFF   &rgb_ug RGB_BRI    &rgb_ug RGB_BRD  &trans        &to 0
        &trans   &trans  &trans   &trans   &trans     &to 2            &trans            &trans
            >;
        };

        AUTO-MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mo 5   &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &none      &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        SNIPER {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

