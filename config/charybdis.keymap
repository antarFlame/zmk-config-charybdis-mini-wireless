#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define U_TAPPING_TERM 200

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    combos {
        compatible = "zmk,combos";

        bootloader_left {
            bindings = <&bootloader>;
            key-positions = <4 5 3>;
            layers = <2>;
        };

        bootloader_right {
            bindings = <&bootloader>;
            key-positions = <6 7 8>;
            layers = <2>;
        };
    };

    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESCAPE  &kp N1    &kp N2     &kp N3  &kp N4     &kp N5    &kp N6  &kp N7         &kp N8        &kp N9   &kp N0         &kp MINUS
&kp TAB     &kp Q     &kp W      &kp E   &kp R      &kp T     &kp Y   &kp U          &kp I         &kp O    &kp P          &kp LEFT_BRACKET
&kp LSHIFT  &kp A     &kp S      &kp D   &kp F      &kp G     &kp H   &kp J          &kp K         &kp L    &kp SEMICOLON  &kp APOS
&kp LCTRL   &kp Z     &kp X      &kp C   &kp V      &kp B     &kp N   &kp M          &kp COMMA     &kp DOT  &kp SLASH      &kp BACKSLASH
            &kp LALT  &kp ENTER  &mo 3   &kp SPACE  &to 1     &to 2   &kp BACKSPACE  &kp LEFT_GUI
            >;
        };

        NAV {
            bindings = <
&kp GRAVE  &trans  &trans          &trans          &trans           &trans           &kp PLUS  &kp KP_MINUS  &kp ASTERISK  &kp KP_DIVIDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans     &trans  &kp HOME        &kp UP_ARROW    &kp END          &kp PAGE_UP      &kp N7    &kp N8        &kp N9        &kp KP_EQUAL   &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans     &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN    &kp N4    &kp N5        &kp NUMBER_6  &kp N0         &kp LEFT_BRACE        &kp RIGHT_BRACE
&trans     &trans  &trans          &trans          &trans           &trans           &kp N1    &kp N2        &kp N3        &kp KP_DOT     &kp LEFT_BRACKET      &kp RIGHT_BRACKET
           &trans  &trans          &trans          &trans           &to 0            &to 0     &trans        &trans
            >;
        };

        FUN {
            bindings = <
&trans    &trans  &trans  &trans   &trans   &trans     &trans           &trans            &trans             &kp PRINTSCREEN  &kp INSERT    &kp DEL
&kp CAPS  &trans  &kp F1  &kp F2   &kp F3   &kp F4     &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4  &bt BT_CLR
&trans    &trans  &kp F5  &kp F6   &kp F7   &kp F8     &out OUT_TOG     &kp K_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE    &kp LALT
&trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12    &rgb_ug RGB_TOG  &rgb_ug RGB_EFF   &rgb_ug RGB_BRI    &rgb_ug RGB_BRD  &trans        &to 0
          &trans  &trans  &trans   &trans   &to 0      &to 0            &trans            &trans
            >;
        };

        AUTO-MOUSE {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans    &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans    &trans  &trans     &trans     &trans     &trans  &trans
&trans  &mo 4   &mkp LCLK  &mkp MCLK  &mkp RCLK  &mo 5     &mo 5   &mkp LCLK  &mkp MCLK  &mkp RCLK  &mo 4   &trans
&trans  &trans  &trans     &trans     &trans     &trans    &trans  &trans     &trans     &trans     &trans  &trans
        &trans  &trans     &trans     &trans     &trans    &trans  &none      &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        SNIPER {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

